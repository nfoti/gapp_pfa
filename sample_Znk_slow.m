function [Znk] = sample_Znk(params)
% SAMPLE_ZNK Gibbs update for thinning variables Znk
%
%  [Znk] = sample_Znk(T, params)
%
%  Inputs: Some taken from params struct
%   T : NxL matrix with covariates of data points in rows
%   Xpn : PxNxK sparse tensor of pseudo-counts for each topic
%   Theta : 1xK vector of factor loadings
%   Phi : PxK matrix of "topics", Phi(:,k) is probability vector
%   W : (L+1)xK matrix with vectors w_k in columns (for RVM)
%   Km : K-element cell array with kernel function for each feature

Xpn = params.Xpn;
Znk = params.Znk;
Theta = params.Theta;
Phi = params.Phi;
Psi = params.Psi;
Km = params.Km;
W = params.W;

N = size(Psi,2);
[P,K] = size(Phi);

inds = Xpn.inds;
vals = Xpn.vals;
kinds = Xpn.kinds;

lp = zeros(1,3);

%onlytopic = zeros(K,N);
%wordassigned = zeros(K,N);
%sampled = zeros(K,N);
%pseudopos = zeros(K,N);
%tmp = zeros(N,K);

rp = randperm(N);

%cellfun(@numel, kinds)'

%Znk = sample_Znk_meat(Znk, Theta, Phi, Psi, Km, W, inds, vals, kinds, rp);

% Check that there is at least one 1 in each row of Znk
%zinds = find(sum(Znk, 2) == 0);
%zidx = randsample(K, numel(zinds), true);
%Znk(sub2ind(size(Znk), zinds, zidx)) = 1;

% Map from cases (see below) to the values z can take
zcode = [0 0 1];

% Scratch space to store cumsum results
cump = [0 0 0];

for k = 1:K

kk = kinds{k};
% Construct full version of this slice
if numel(kk) > 0
  Xpnk = accumarray(inds(kk,1:2), vals(kk), [P N]);
else
  Xpnk = zeros(P,N);
end

% This is the activation function for the topic, not to be confused with
% Phi.
phi = normcdf(Km{k}*W(:,k));
phi(phi == 0) = 1e-16;
phi(phi == 1) = 1-1e-16;

% No need to construct this for each document
%kidx = [1:(k-1) (k+1):K];
%kidx = ~((1:K)==k);
%ps = unique(inds(kk,1));

%rate = Phi(ps,k)*Theta(k)*Psi(k,:);
rate = Phi(:,k)*Theta(k)*Psi(k,:);
ratesum = sum(rate);

% It's faster to generate a bunch of random numbers and this is the
% maximum we would need
uidx = 1;
runif = rand(N,1);

Xpnk_sum = sum(Xpnk);

%for n = 1:N
for n = rp %randperm(N)
  
  % Case 1: If no other topic active for document n then this one has to
  % be, otherwise get state with 0 probability under the model.
  % if sum(Znk(n, kidx)) == 0
  %  Znk(n,k) = 1;
  %  %onlytopic(k,n) = 1;
  %  %tmp(n,k) = 1;
  %  continue;
  % end

  % Case 2: Some word p in document n was generated by topic k, so can't
  % thin this topic
  % if sum(Xpnk(:,n)) > 0
  %  Znk(n,k) = 1;
  %  %wordassigned(k,n) = 1;
  %  %tmp(n,k) = sum(Xpnk(:,n));
  %  %tmp(n,k) = 2;
  %  continue
  % end
  
  % Cases 1 and 2
  %Zn_sum = sum(Znk(n, kidx));
  %if Zn_sum == 0 || Xpnk_sum(n) > 0
  % We make sure there is at least one non-zero in each row of Znk after
  % the loop
  if Xpnk_sum(n) > 0
    Znk(n,k) = 1;
    continue;
  end
  
  % Case 3: Sample because no words assigned to this topic
  
  lPhix = log(phi(n));
  lPhix_c = log(1-phi(n));

  %rate = Phi(ps,k)*Theta(k)*Psi(k,n);
  
  % The likelihood is Pois(0; rate)
  %lr = lPhix - lPhix_c - sum(rate);
  
  % Sample upnk from Poisson with rate above
%     upnk = poissrnd(rate);
%     if any(upnk > 0)
%      Znk(n,k) = 0;
%      pseudopos(k,n) = 1;
%      continue;
%     end
%    lr = lPhix - lPhix_c;

  % index-1 codes the case of Znk and u:nk (in this order)
  % upnk are not actually sampled in this case, they're just to help
  % interpret what goes on.
  % 00 (0): Znk = 0, u:nk = 0
  % 01 (1): Znk = 0, uink > 1, for some i
  % 10 (2): Znk = 1, u:nk = 0
  ratesum_n = ratesum(n);
  denom = log(exp(-ratesum_n)*phi(n) + (1-phi(n)) + eps);
  lp(1) = -ratesum_n + lPhix_c - denom;
  lp(2) = log(1-exp(-ratesum_n)+eps) + lPhix_c - denom;
  lp(3) = -ratesum_n + lPhix - denom;

  %r = discreternd(1,p) - 1;
  % Avoid the funcion overhead and other stuff that discreternd does
  %cump = cumsum(exp(lp));
  %r = find(rand*(1-eps) < cump, 1) - 1;
  %r = find(runif(uidx)*(1-eps) < cump, 1) - 1;
  %if r == 0 || r == 1
  %  Znk(n,k) = 0;
  %elseif r == 2
  %  Znk(n,k) = 1;
    %tmp(n,k) = 3;
  %end
  
  p = exp(lp);
  cump(1) = p(1);
  cump(2) = sum(p(1:2));
  cump(3) = sum(p);
  
  r = find(runif(uidx)*(1-eps) < cump, 1); % Not subtracting 1 b/c r is index
  uidx = uidx + 1;
  Znk(n,k) = zcode(r);

  % Otherwise sample from the prior because we can't tell
  %pz0 = 1/(1+exp(lr));
  %fprintf('pz0: %f\n', pz0);
  
  %Znk(n,k) = rand > pz0;
  
  %sampled(k,n) = Znk(n,k);
  
end

end

%% Check that there is at least one 1 in each row of Znk
%zinds = find(sum(Znk, 2) == 0);
%zidx = randsample(K, numel(zinds));
%Znk(sub2ind(size(Znk), zinds, zidx)) = 1;

%Prints the figures that appear every iteration
%{
figure(4);
%tmp = 1*onlytopic' + 2*wordassigned' + 3*pseudopos' + 4*sampled';
tmp = 1*onlytopic' + 2*wordassigned' + 3*sampled';
clf;
imagesc(tmp);
%imagesc(Znk);
colormap jet;
colorbar;
drawnow;

figure(5);
clf;
[d K] = size(params.Phi);
nrow = ceil(sqrt(K));
d = sqrt(d);
for i = 1:K
  subplot(nrow,nrow,i);
  imagesc(reshape(params.Phi(:,i),d,d));
  colormap gray;
  axis image;
end

pause(1);
%}
